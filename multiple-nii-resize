import os
import numpy as np
import nibabel as nib
from nibabel.testing import data_path
import itertools

#Change your path#
path = ("/research/projects/Ning/Medulloblastoma/Arrange Medulloblastoma/Add0409/Correcting")
filelist = os.listdir (path)
for name in filelist :
    file = os.path.join(path, name)
    img = nib.load(file)
    filename = ("/"+name)
    short = name.replace('.nii.gz','')
    initial_size_x = img.shape[0]
    initial_size_y = img.shape[1]
    initial_size_z = img.shape[2]
    initial_affine = img.affine
#Edit new size#
    new_size_x = 256
    new_size_y = 256
    new_size_z = img.shape[2]
    
    new_aff = img.affine[2,2]*(256/img.shape[0]) #Edit new size to be the same as new_size_x#
    img.affine[2,2] = new_aff
    new_affine = img.affine
   

    initial_data = nib.load(path + filename).get_data()

    delta_x = initial_size_x/new_size_x
    delta_y = initial_size_y/new_size_y
    delta_z = initial_size_z/new_size_z

    new_data = np.zeros((new_size_x,new_size_y,new_size_z))

    for x, y, z in itertools.product(range(new_size_x),
                                     range(new_size_y),
                                     range(new_size_z)):
        new_data[x][y][z] = initial_data[int(x*delta_x)][int(y*delta_y)][int(z*delta_z)]

    img = nib.Nifti1Image(new_data, new_affine)
    img.to_filename(short+"_resize"+ ".nii.gz")
